<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.th.thservice.dao.TestPointMapper">
  <resultMap id="BaseResultMap" type="com.th.thservice.entity.TestPoint">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="testTermId" jdbcType="INTEGER" property="testTermId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="test_step" jdbcType="VARCHAR" property="test_step" />
    <result column="testResult" jdbcType="VARCHAR" property="testResult" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from test_point
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.th.thservice.entity.TestPoint">
    insert into test_point ( `testTermId`, content, `test_step`,testResult, status, remarks)
    values ( #{testTermId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
      #{test_step,jdbcType=VARCHAR},#{testResult,jdbcType=VARCHAR},0, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.th.thservice.entity.TestPoint">
    update test_point
    set `testResult` = #{testResult,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
    where id = #{id}
  </update>
  <select id="queryAll" resultType="com.th.thservice.entity.TestPoint">
    select * from test_point where testTermId=#{id}
  </select>
  <!--<select id="findByParams" resultType="com.th.thservice.entity.HardwareLcd">
    select a.id,a.sort,a.createBy,a.createTime,a.lastUpdateBy,a.lastUpdateTime,b.label as `use`,c.label as `model`,d.label as `matching_protocol`
    FROM  hardware_lcd a,sys_dict b,sys_dict c,sys_dict d
    <where>
      <if test="1 !=0">a.`use`=b.id</if>
      <if test="1 !=0">and a.model=`c`.id </if>
      <if test="1 !=0">and a.matching_protocol=d.id</if>
      <if test="use !=0">and a.use= #{use}</if>
      <if test="protocol !=0">and a.matching_protocol= #{protocol}</if>
      <if test="model !=0">and a.model= #{model}</if>
    </where>
    order by sort
  </select>-->
</mapper>