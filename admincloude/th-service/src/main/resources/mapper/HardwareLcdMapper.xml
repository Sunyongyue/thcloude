<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.th.thservice.dao.HardwareLcdMapper">
  <resultMap id="BaseResultMap" type="com.th.thservice.entity.HardwareLcd">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="use" jdbcType="VARCHAR" property="use" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="matching_protocol" jdbcType="VARCHAR" property="matching_protocol" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="createBy" jdbcType="VARCHAR" property="createBy" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="lastUpdateBy" jdbcType="VARCHAR" property="lastUpdateBy" />
    <result column="lastUpdateTime" jdbcType="TIMESTAMP" property="lastUpdateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `describe`, path, `status`, createBy, createTime, lastUpdateBy, lastUpdateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
   select a.id,a.sort,a.createBy,a.createTime,a.lastUpdateBy,a.lastUpdateTime,b.label as `use`,c.label as `model`,d.label as `matching_protocol`
   FROM  hardware_lcd a,sys_dict b,sys_dict c,sys_dict d
   WHERE a.`use`=b.id and a.model=c.id and a.matching_protocol=d.id and a.id = #{id,jdbcType=BIGINT} order by a.sort
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hardware_lcd
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.th.thservice.entity.HardwareLcd">
    insert into hardware_lcd ( `use`, model, `matching_protocol`,sort, createBy, createTime, lastUpdateBy, lastUpdateTime
      )
    values ( #{use,jdbcType=INTEGER}, #{model,jdbcType=INTEGER},
      #{matching_protocol,jdbcType=INTEGER},#{sort,jdbcType=INTEGER},#{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=VARCHAR},
      #{lastUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.th.thservice.entity.HardwareLcd">
    update hardware_lcd
    set `use` = #{use,jdbcType=INTEGER},
      `model` = #{model,jdbcType=INTEGER},
      matching_protocol = #{matching_protocol,jdbcType=INTEGER},
      sort=#{sort}
    where id = #{id}
  </update>
  <select id="findAll" resultType="com.th.thservice.entity.HardwareLcd">
    select a.id,a.sort,a.createBy,a.createTime,a.lastUpdateBy,a.lastUpdateTime,b.label as `use`,c.label as `model`,d.label as `matching_protocol`
    FROM  hardware_lcd a,sys_dict b,sys_dict c,sys_dict d
    WHERE a.`use`=b.id and a.model=c.id and a.matching_protocol=d.id order by a.sort
  </select>
  <select id="findByParams" resultType="com.th.thservice.entity.HardwareLcd">
    select a.id,a.sort,a.createBy,a.createTime,a.lastUpdateBy,a.lastUpdateTime,b.label as `use`,c.label as `model`,d.label as `matching_protocol`
    FROM  hardware_lcd a,sys_dict b,sys_dict c,sys_dict d
    <where>
      <if test="1 !=0">a.`use`=b.id</if>
      <if test="1 !=0">and a.model=`c`.id </if>
      <if test="1 !=0">and a.matching_protocol=d.id</if>
      <if test="use !=0">and a.use= #{use}</if>
      <if test="protocol !=0">and a.matching_protocol= #{protocol}</if>
      <if test="model !=0">and a.model= #{model}</if>
    </where>
    order by sort
  </select>
</mapper>